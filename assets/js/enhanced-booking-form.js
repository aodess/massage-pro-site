// ===== ENHANCED BOOKING FORM =====

class EnhancedBookingForm {
    constructor() {
        this.countryCodes = [
            { code: '+972', country: '–ò–∑—Ä–∞–∏–ª—å', flag: 'üáÆüá±' },
            { code: '+7', country: '–†–æ—Å—Å–∏—è', flag: 'üá∑üá∫' },
            { code: '+380', country: '–£–∫—Ä–∞–∏–Ω–∞', flag: 'üá∫üá¶' },
            { code: '+1', country: '–°–®–ê', flag: 'üá∫üá∏' },
            { code: '+44', country: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', flag: 'üá¨üáß' },
            { code: '+49', country: '–ì–µ—Ä–º–∞–Ω–∏—è', flag: 'üá©üá™' },
            { code: '+33', country: '–§—Ä–∞–Ω—Ü–∏—è', flag: 'üá´üá∑' },
            { code: '+39', country: '–ò—Ç–∞–ª–∏—è', flag: 'üáÆüáπ' },
            { code: '+34', country: '–ò—Å–ø–∞–Ω–∏—è', flag: 'üá™üá∏' },
            { code: '+31', country: '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã', flag: 'üá≥üá±' },
            { code: '+48', country: '–ü–æ–ª—å—à–∞', flag: 'üáµüá±' },
            { code: '+420', country: '–ß–µ—Ö–∏—è', flag: 'üá®üáø' },
            { code: '+90', country: '–¢—É—Ä—Ü–∏—è', flag: 'üáπüá∑' },
            { code: '+375', country: '–ë–µ–ª–∞—Ä—É—Å—å', flag: 'üáßüáæ' },
            { code: '+7', country: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', flag: 'üá∞üáø' },
            { code: '+998', country: '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω', flag: 'üá∫üáø' },
            { code: '+994', country: '–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω', flag: 'üá¶üáø' },
            { code: '+995', country: '–ì—Ä—É–∑–∏—è', flag: 'üá¨üá™' },
            { code: '+374', country: '–ê—Ä–º–µ–Ω–∏—è', flag: 'üá¶üá≤' }
        ];
        
        this.selectedCountryCode = '+972'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ò–∑—Ä–∞–∏–ª—å
        this.captchaRequired = true;
        this.captchaValue = null;
        this.bookingAttempts = 0;
        this.lastBookingTime = 0;
        
        this.init();
    }

    init() {
        // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–µ
        this.enhancePhoneField();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–ø—á—É
        this.addCaptcha();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        this.initEventHandlers();
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        this.addStyles();
    }

    enhancePhoneField() {
        const phoneField = document.getElementById('clientPhone');
        if (!phoneField) return;
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        const phoneGroup = phoneField.parentElement;
        phoneGroup.innerHTML = `
            <div class="phone-input-group">
                <div class="country-code-selector" id="countryCodeSelector">
                    <span class="selected-flag">${this.countryCodes[0].flag}</span>
                    <span class="selected-code">${this.countryCodes[0].code}</span>
                    <i class="fas fa-chevron-down"></i>
                </div>
                <input type="tel" 
                       id="clientPhone" 
                       placeholder="50-123-4567" 
                       required
                       pattern="[0-9-() ]+"
                       maxlength="15">
            </div>
            <div class="country-dropdown" id="countryDropdown">
                ${this.countryCodes.map(country => `
                    <div class="country-option" data-code="${country.code}">
                        <span class="country-flag">${country.flag}</span>
                        <span class="country-name">${country.country}</span>
                        <span class="country-code">${country.code}</span>
                    </div>
                `).join('')}
            </div>
        `;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Å–∫—É –¥–ª—è –≤–≤–æ–¥–∞
        this.initPhoneMask();
    }

    initPhoneMask() {
        const phoneInput = document.getElementById('clientPhone');
        
        phoneInput.addEventListener('input', (e) => {
            let value = e.target.value.replace(/\D/g, '');
            let formattedValue = '';
            
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã
            if (this.selectedCountryCode === '+972') {
                // –ò–∑—Ä–∞–∏–ª—å—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç: 50-123-4567
                if (value.length > 0) formattedValue = value.substring(0, 2);
                if (value.length > 2) formattedValue += '-' + value.substring(2, 5);
                if (value.length > 5) formattedValue += '-' + value.substring(5, 9);
            } else if (this.selectedCountryCode === '+7') {
                // –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç: 903 123-45-67
                if (value.length > 0) formattedValue = value.substring(0, 3);
                if (value.length > 3) formattedValue += ' ' + value.substring(3, 6);
                if (value.length > 6) formattedValue += '-' + value.substring(6, 8);
                if (value.length > 8) formattedValue += '-' + value.substring(8, 10);
            } else if (this.selectedCountryCode === '+1') {
                // –ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç: (555) 123-4567
                if (value.length > 0) formattedValue = '(' + value.substring(0, 3);
                if (value.length > 3) formattedValue += ') ' + value.substring(3, 6);
                if (value.length > 6) formattedValue += '-' + value.substring(6, 10);
            } else {
                // –û–±—â–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
                if (value.length > 0) formattedValue = value.substring(0, 3);
                if (value.length > 3) formattedValue += ' ' + value.substring(3, 6);
                if (value.length > 6) formattedValue += ' ' + value.substring(6, 10);
            }
            
            e.target.value = formattedValue;
        });
    }

    addCaptcha() {
        const form = document.getElementById('bookingForm');
        if (!form) return;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞–ø—á–∏ –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–∞–º–∏
        const captchaHTML = `
            <div class="captcha-container" id="captchaContainer">
                <div class="captcha-box">
                    <div class="captcha-question" id="captchaQuestion"></div>
                    <input type="text" 
                           id="captchaAnswer" 
                           placeholder="–í–∞—à –æ—Ç–≤–µ—Ç" 
                           class="captcha-input"
                           required>
                    <button type="button" class="captcha-refresh" onclick="enhancedBookingForm.generateCaptcha()">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                </div>
                <div class="captcha-error" id="captchaError"></div>
            </div>
        `;
        
        const summaryElement = document.getElementById('bookingSummary');
        summaryElement.insertAdjacentHTML('afterend', captchaHTML);
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –∫–∞–ø—á—É
        this.generateCaptcha();
    }

    generateCaptcha() {
        const types = ['math', 'text', 'emoji'];
        const type = types[Math.floor(Math.random() * types.length)];
        
        switch(type) {
            case 'math':
                this.generateMathCaptcha();
                break;
            case 'text':
                this.generateTextCaptcha();
                break;
            case 'emoji':
                this.generateEmojiCaptcha();
                break;
        }
        
        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –æ—Ç–≤–µ—Ç–∞ –∏ –æ—à–∏–±–∫—É
        document.getElementById('captchaAnswer').value = '';
        document.getElementById('captchaError').textContent = '';
    }

    generateMathCaptcha() {
        const num1 = Math.floor(Math.random() * 10) + 1;
        const num2 = Math.floor(Math.random() * 10) + 1;
        const operations = ['+', '-'];
        const operation = operations[Math.floor(Math.random() * operations.length)];
        
        let result;
        let question;
        
        if (operation === '+') {
            result = num1 + num2;
            question = `${num1} + ${num2} = ?`;
        } else {
            // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π
            const bigger = Math.max(num1, num2);
            const smaller = Math.min(num1, num2);
            result = bigger - smaller;
            question = `${bigger} - ${smaller} = ?`;
        }
        
        this.captchaValue = result.toString();
        document.getElementById('captchaQuestion').innerHTML = `
            <i class="fas fa-calculator"></i> ${question}
        `;
    }

    generateTextCaptcha() {
        const questions = [
            { q: '–ù–∞–ø–∏—à–∏—Ç–µ "–î–ê" –±–æ–ª—å—à–∏–º–∏ –±—É–∫–≤–∞–º–∏', a: '–î–ê' },
            { q: '–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª–µ? (—Ü–∏—Ñ—Ä–æ–π)', a: '7' },
            { q: '–ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ —Å–ª–æ–≤–∞ "–ú–∞—Å—Å–∞–∂"?', a: '–ú' },
            { q: '–¶–≤–µ—Ç –Ω–µ–±–∞ –≤ —è—Å–Ω—ã–π –¥–µ–Ω—å?', a: '—Å–∏–Ω–∏–π' },
            { q: '–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤ —Å—É—Ç–∫–∞—Ö? (—Ü–∏—Ñ—Ä–æ–π)', a: '24' }
        ];
        
        const selected = questions[Math.floor(Math.random() * questions.length)];
        this.captchaValue = selected.a.toLowerCase();
        
        document.getElementById('captchaQuestion').innerHTML = `
            <i class="fas fa-question-circle"></i> ${selected.q}
        `;
    }

    generateEmojiCaptcha() {
        const emojis = [
            { emoji: 'üåû', name: '—Å–æ–ª–Ω—Ü–µ' },
            { emoji: 'üåô', name: '–ª—É–Ω–∞' },
            { emoji: '‚≠ê', name: '–∑–≤–µ–∑–¥–∞' },
            { emoji: '‚ù§Ô∏è', name: '—Å–µ—Ä–¥—Ü–µ' },
            { emoji: 'üå∫', name: '—Ü–≤–µ—Ç–æ–∫' }
        ];
        
        const selected = emojis[Math.floor(Math.random() * emojis.length)];
        this.captchaValue = selected.name;
        
        document.getElementById('captchaQuestion').innerHTML = `
            <span style="font-size: 2rem;">${selected.emoji}</span> 
            <span>–ß—Ç–æ —ç—Ç–æ? (–æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º)</span>
        `;
    }

    verifyCaptcha() {
        const answer = document.getElementById('captchaAnswer').value.toLowerCase().trim();
        const errorElement = document.getElementById('captchaError');
        
        if (!answer) {
            errorElement.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å';
            return false;
        }
        
        if (answer !== this.captchaValue) {
            errorElement.textContent = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑';
            this.generateCaptcha();
            return false;
        }
        
        return true;
    }

    initEventHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã
        const selector = document.getElementById('countryCodeSelector');
        const dropdown = document.getElementById('countryDropdown');
        
        if (selector) {
            selector.addEventListener('click', () => {
                dropdown.classList.toggle('show');
            });
        }
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
        document.addEventListener('click', (e) => {
            if (e.target.closest('.country-option')) {
                const option = e.target.closest('.country-option');
                const code = option.dataset.code;
                const country = this.countryCodes.find(c => c.code === code);
                
                if (country) {
                    this.selectedCountryCode = code;
                    document.querySelector('.selected-flag').textContent = country.flag;
                    document.querySelector('.selected-code').textContent = country.code;
                    dropdown.classList.remove('show');
                    
                    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω—ã
                    document.getElementById('clientPhone').value = '';
                    this.initPhoneMask();
                }
            } else if (!e.target.closest('.country-code-selector')) {
                dropdown.classList.remove('show');
            }
        });
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
        const originalConfirmBooking = window.confirmBooking;
        window.confirmBooking = () => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—Ç—É –æ—Ç —Å–ø–∞–º–∞
            const currentTime = Date.now();
            if (currentTime - this.lastBookingTime < 60000) { // 1 –º–∏–Ω—É—Ç–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
                this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π –∑–∞–ø–∏—Å–∏', 'warning');
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–ø—á—É
            if (!this.verifyCaptcha()) {
                return;
            }
            
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            const phoneNumber = this.selectedCountryCode + document.getElementById('clientPhone').value.replace(/\D/g, '');
            
            // –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–¥–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            const originalPhone = document.getElementById('clientPhone').value;
            document.getElementById('clientPhone').value = phoneNumber;
            
            // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            originalConfirmBooking();
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ
            document.getElementById('clientPhone').value = originalPhone;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–ø—ã—Ç–∫–∏
            this.lastBookingTime = currentTime;
            this.bookingAttempts++;
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∫–∞–ø—á—É
            this.generateCaptcha();
        };
    }

    showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `booking-notification ${type}`;
        notification.innerHTML = `
            <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle'}"></i>
            <span>${message}</span>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.classList.add('show');
        }, 10);
        
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    addStyles() {
        const style = document.createElement('style');
        style.textContent = `
            /* Phone Input Group */
            .phone-input-group {
                display: flex;
                gap: 0.5rem;
                position: relative;
            }

            .country-code-selector {
                display: flex;
                align-items: center;
                gap: 0.5rem;
                padding: 0.75rem 1rem;
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid var(--border);
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.3s ease;
                min-width: 120px;
            }

            .country-code-selector:hover {
                border-color: var(--primary);
            }

            .selected-flag {
                font-size: 1.5rem;
            }

            .selected-code {
                font-weight: 600;
            }

            .country-code-selector i {
                margin-left: auto;
                font-size: 0.8rem;
                color: var(--text-gray);
            }

            .country-dropdown {
                position: absolute;
                top: 100%;
                left: 0;
                right: 0;
                background: var(--secondary);
                border: 1px solid var(--border);
                border-radius: 8px;
                margin-top: 0.5rem;
                max-height: 300px;
                overflow-y: auto;
                display: none;
                z-index: 1000;
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            }

            .country-dropdown.show {
                display: block;
            }

            .country-option {
                display: flex;
                align-items: center;
                gap: 1rem;
                padding: 0.75rem 1rem;
                cursor: pointer;
                transition: background 0.3s ease;
            }

            .country-option:hover {
                background: rgba(255, 107, 53, 0.1);
            }

            .country-flag {
                font-size: 1.5rem;
                width: 30px;
            }

            .country-name {
                flex: 1;
            }

            .country-code {
                color: var(--text-gray);
                font-size: 0.9rem;
            }

            /* Captcha Styles */
            .captcha-container {
                margin: 2rem 0;
                padding: 1.5rem;
                background: rgba(255, 255, 255, 0.02);
                border-radius: 10px;
                border: 1px solid var(--border);
            }

            .captcha-box {
                display: flex;
                align-items: center;
                gap: 1rem;
            }

            .captcha-question {
                flex: 1;
                font-size: 1.1rem;
                font-weight: 600;
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

            .captcha-input {
                width: 150px;
                padding: 0.75rem;
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid var(--border);
                border-radius: 8px;
                color: var(--text-light);
                font-size: 1rem;
            }

            .captcha-input:focus {
                outline: none;
                border-color: var(--primary);
            }

            .captcha-refresh {
                padding: 0.75rem;
                background: var(--primary);
                border: none;
                border-radius: 8px;
                color: white;
                cursor: pointer;
                transition: all 0.3s ease;
            }

            .captcha-refresh:hover {
                transform: rotate(180deg);
                background: #e55a2b;
            }

            .captcha-error {
                color: var(--danger);
                font-size: 0.9rem;
                margin-top: 0.5rem;
                display: block;
                min-height: 1.2rem;
            }

            /* Notifications */
            .booking-notification {
                position: fixed;
                top: 20px;
                right: 20px;
                background: var(--secondary);
                color: white;
                padding: 1rem 1.5rem;
                border-radius: 8px;
                display: flex;
                align-items: center;
                gap: 1rem;
                transform: translateX(400px);
                transition: transform 0.3s ease;
                z-index: 9999;
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
                max-width: 400px;
            }

            .booking-notification.show {
                transform: translateX(0);
            }

            .booking-notification.success {
                background: #10b981;
            }

            .booking-notification.warning {
                background: #f59e0b;
            }

            .booking-notification i {
                font-size: 1.2rem;
            }

            /* Mobile Responsive */
            @media (max-width: 768px) {
                .country-code-selector {
                    min-width: 100px;
                    padding: 0.75rem 0.5rem;
                }

                .captcha-box {
                    flex-wrap: wrap;
                }

                .captcha-question {
                    width: 100%;
                    margin-bottom: 1rem;
                }

                .captcha-input {
                    flex: 1;
                }

                .booking-notification {
                    left: 20px;
                    right: 20px;
                    transform: translateY(-100px);
                }

                .booking-notification.show {
                    transform: translateY(0);
                }
            }
        `;
        document.head.appendChild(style);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    if (document.getElementById('bookingForm')) {
        window.enhancedBookingForm = new EnhancedBookingForm();
    }
});