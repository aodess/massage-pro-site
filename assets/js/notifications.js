// ===== ADVANCED NOTIFICATION SYSTEM =====
// –§–∞–π–ª: assets/js/notifications.js

class NotificationSystem {
    constructor() {
        this.templates = this.loadTemplates();
        this.scheduledNotifications = this.loadScheduledNotifications();
        this.clientPreferences = this.loadClientPreferences();
        this.businessInfo = this.loadBusinessInfo();
        this.init();
    }

    init() {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        this.checkScheduledNotifications();
        
        // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        setInterval(() => this.checkScheduledNotifications(), 60000); // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    loadTemplates() {
        const defaultTemplates = {
            booking_confirmation: {
                title: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏",
                template: `üéâ *–ó–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!*

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {{clientName}}!

üìÖ *–î–∞—Ç–∞:* {{date}}
‚è∞ *–í—Ä–µ–º—è:* {{time}}
üíÜ‚Äç‚ôÄÔ∏è *–£—Å–ª—É–≥–∞:* {{serviceName}}
‚è± *–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:* {{duration}} –º–∏–Ω
üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å:* {{price}}

üìç *–ê–¥—Ä–µ—Å:* {{address}}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {{phone}}

{{#notes}}
üìù *–í–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è:* {{notes}}
{{/notes}}

–ñ–¥–µ–º –≤–∞—Å –≤ {{businessName}}!

_–î–ª—è –æ—Ç–º–µ–Ω—ã –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å–∞ –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ._`,
                variables: ['clientName', 'date', 'time', 'serviceName', 'duration', 'price', 'address', 'phone', 'notes', 'businessName']
            },

            reminder_24h: {
                title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 24 —á–∞—Å–∞",
                template: `‚è∞ *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–ø–∏—Å–∏*

{{clientName}}, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –≤–∞—à–µ–π –∑–∞–ø–∏—Å–∏:

üìÖ *–ó–∞–≤—Ç—Ä–∞* –≤ {{time}}
üíÜ‚Äç‚ôÄÔ∏è {{serviceName}}
üìç {{address}}

{{#preparation}}
üìã *–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–µ–∞–Ω—Å—É:*
{{preparation}}
{{/preparation}}

–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ {{businessName}}!

_–ï—Å–ª–∏ –ø–ª–∞–Ω—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –∑–∞—Ä–∞–Ω–µ–µ._`,
                variables: ['clientName', 'time', 'serviceName', 'address', 'preparation', 'businessName']
            },

            reminder_2h: {
                title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 2 —á–∞—Å–∞",
                template: `üîî *–°–∫–æ—Ä–æ –≤–∞—à —Å–µ–∞–Ω—Å –º–∞—Å—Å–∞–∂–∞*

{{clientName}}, –≤–∞—à —Å–µ–∞–Ω—Å –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞:

‚è∞ *–í {{time}}*
üìç {{address}}

üöó *–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–µ—Ö–∞—Ç—å –∑–∞—Ä–∞–Ω–µ–µ*
üßò‚Äç‚ôÄÔ∏è *–ù–∞—Å—Ç—Ä–æ–π—Ç–µ—Å—å –Ω–∞ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ*

–ñ–¥–µ–º –≤–∞—Å –≤ {{businessName}}!`,
                variables: ['clientName', 'time', 'address', 'businessName']
            },

            thank_you: {
                title: "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ —Å–µ–∞–Ω—Å–∞",
                template: `üôè *–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ!*

{{clientName}}, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –¥–æ–≤–µ—Ä–∏–µ!

‚≠ê *–ö–∞–∫ –ø—Ä–æ—à–µ–ª —Å–µ–∞–Ω—Å?* –ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—à–µ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.

üîÑ *–°–ª–µ–¥—É—é—â–∏–π —Å–µ–∞–Ω—Å* —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º —á–µ—Ä–µ–∑ {{recommendedInterval}}

üìÖ *–ó–∞–ø–∏—Å–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞:* {{bookingLink}}

{{businessName}} - –≤–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞—à–∞ –∑–∞–±–æ—Ç–∞!`,
                variables: ['clientName', 'recommendedInterval', 'bookingLink', 'businessName']
            },

            birthday_greeting: {
                title: "–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è",
                template: `üéâ *–° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è!*

{{clientName}}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤–∞—Å —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º!

üéÅ *–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:* —Å–∫–∏–¥–∫–∞ 20% –Ω–∞ –ª—é–±–æ–π –º–∞—Å—Å–∞–∂ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏

üìÖ *–î–ª—è –∑–∞–ø–∏—Å–∏:* {{phone}}

–ñ–µ–ª–∞–µ–º –∑–¥–æ—Ä–æ–≤—å—è –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!

{{businessName}} üíù`,
                variables: ['clientName', 'phone', 'businessName']
            },

            cancellation_client: {
                title: "–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–æ–º",
                template: `‚ùå *–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞*

{{clientName}}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –Ω–∞ {{date}} –≤ {{time}} –æ—Ç–º–µ–Ω–µ–Ω–∞.

üíî *–ñ–∞–ª—å, —á—Ç–æ –Ω–µ —É–≤–∏–¥–∏–º—Å—è*

üìÖ *–î–ª—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:* {{bookingLink}}
üìû *–ò–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ:* {{phone}}

{{businessName}}`,
                variables: ['clientName', 'date', 'time', 'bookingLink', 'phone', 'businessName']
            },

            reschedule_notification: {
                title: "–ü–µ—Ä–µ–Ω–æ—Å –∑–∞–ø–∏—Å–∏",
                template: `üîÑ *–ó–∞–ø–∏—Å—å –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞*

{{clientName}}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞:

‚ùå *–ë—ã–ª–æ:* {{oldDate}} –≤ {{oldTime}}
‚úÖ *–°—Ç–∞–ª–æ:* {{newDate}} –≤ {{newTime}}

üíÜ‚Äç‚ôÄÔ∏è *–£—Å–ª—É–≥–∞:* {{serviceName}}
üìç *–ê–¥—Ä–µ—Å:* {{address}}

–ñ–¥–µ–º –≤–∞—Å –≤ {{businessName}}!`,
                variables: ['clientName', 'oldDate', 'oldTime', 'newDate', 'newTime', 'serviceName', 'address', 'businessName']
            },

            special_offer: {
                title: "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
                template: `üéÅ *–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!*

{{clientName}}, —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—Å:

{{offerText}}

‚è≥ *–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:* {{offerEndDate}}

üìÖ *–ó–∞–ø–∏—Å–∞—Ç—å—Å—è:* {{bookingLink}}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {{phone}}

{{businessName}}`,
                variables: ['clientName', 'offerText', 'offerEndDate', 'bookingLink', 'phone', 'businessName']
            }
        };

        return JSON.parse(localStorage.getItem('notificationTemplates') || JSON.stringify(defaultTemplates));
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    loadScheduledNotifications() {
        return JSON.parse(localStorage.getItem('scheduledNotifications') || '[]');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤
    loadClientPreferences() {
        return JSON.parse(localStorage.getItem('clientPreferences') || '{}');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∏–∑–Ω–µ—Å–µ
    loadBusinessInfo() {
        return JSON.parse(localStorage.getItem('massageContent') || JSON.stringify({
            businessName: 'MASSAGE PRO',
            phone: '+972-50-123-4567',
            address: '—É–ª. –î–∏–∑–µ–Ω–≥–æ—Ñ 125, –¢–µ–ª—å-–ê–≤–∏–≤',
            whatsappPhone: '972501234567',
            website: window.location.origin
        }));
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    createMessage(templateKey, data) {
        const template = this.templates[templateKey];
        if (!template) {
            throw new Error(`Template ${templateKey} not found`);
        }

        let message = template.template;

        // –ó–∞–º–µ–Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        const allData = {
            ...data,
            ...this.businessInfo,
            bookingLink: `${this.businessInfo.website}#booking`,
            currentDate: new Date().toLocaleDateString('ru-RU'),
            currentTime: new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })
        };

        // –ü—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        for (const [key, value] of Object.entries(allData)) {
            const regex = new RegExp(`{{${key}}}`, 'g');
            message = message.replace(regex, value || '');
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ª–æ–≤–Ω—ã—Ö –±–ª–æ–∫–æ–≤ {{#variable}}...{{/variable}}
        message = message.replace(/{{#(\w+)}}([\s\S]*?){{\/\1}}/g, (match, variable, content) => {
            return allData[variable] ? content : '';
        });

        // –û—á–∏—Å—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
        message = message.replace(/\n\s*\n\s*\n/g, '\n\n').trim();

        return message;
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    async sendNotification(type, bookingData, scheduleTime = null) {
        try {
            const message = this.createMessage(type, this.prepareBookingData(bookingData));
            
            if (scheduleTime) {
                // –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
                this.scheduleNotification(type, bookingData, scheduleTime);
            } else {
                // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
                this.sendWhatsAppMessage(bookingData.client.phone, message);
            }

            // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            this.logNotification(type, bookingData.client.phone, message);

            return { success: true, message };
        } catch (error) {
            console.error('Notification sending failed:', error);
            return { success: false, error: error.message };
        }
    }

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–∏ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    prepareBookingData(booking) {
        const date = new Date(booking.date);
        return {
            clientName: booking.client.name,
            clientPhone: booking.client.phone,
            date: date.toLocaleDateString('ru-RU', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            }),
            dateShort: date.toLocaleDateString('ru-RU'),
            time: booking.time,
            serviceName: booking.service.name,
            duration: booking.service.duration,
            price: `‚Ç™${booking.service.price}`,
            notes: booking.client.notes,
            bookingId: booking.id,
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            dayOfWeek: date.toLocaleDateString('ru-RU', { weekday: 'long' }),
            isWeekend: date.getDay() === 0 || date.getDay() === 6,
            season: this.getSeason(date),
            recommendedInterval: this.getRecommendedInterval(booking.service.name),
            preparation: this.getPreparationTips(booking.service.name)
        };
    }

    // –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∑–∞–ø–∏—Å–∏
    scheduleBookingNotifications(booking) {
        const bookingDate = new Date(booking.date + 'T' + booking.time);
        
        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (—Å—Ä–∞–∑—É)
        this.sendNotification('booking_confirmation', booking);
        
        // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 24 —á–∞—Å–∞
        const reminder24h = new Date(bookingDate.getTime() - 24 * 60 * 60 * 1000);
        if (reminder24h > new Date()) {
            this.scheduleNotification('reminder_24h', booking, reminder24h);
        }
        
        // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 2 —á–∞—Å–∞
        const reminder2h = new Date(bookingDate.getTime() - 2 * 60 * 60 * 1000);
        if (reminder2h > new Date()) {
            this.scheduleNotification('reminder_2h', booking, reminder2h);
        }
        
        // –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ –ø–æ—Å–ª–µ —Å–µ–∞–Ω—Å–∞
        const thankYou = new Date(bookingDate.getTime() + (booking.service.duration + 120) * 60 * 1000);
        this.scheduleNotification('thank_you', booking, thankYou);
    }

    // –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    scheduleNotification(type, bookingData, sendTime) {
        const notification = {
            id: this.generateNotificationId(),
            type,
            bookingData,
            sendTime: sendTime.toISOString(),
            status: 'scheduled',
            createdAt: new Date().toISOString()
        };

        this.scheduledNotifications.push(notification);
        this.saveScheduledNotifications();
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    checkScheduledNotifications() {
        const now = new Date();
        
        this.scheduledNotifications.forEach(notification => {
            if (notification.status === 'scheduled') {
                const sendTime = new Date(notification.sendTime);
                
                if (sendTime <= now) {
                    this.executePendingNotification(notification.id);
                }
            }
        });
    }

    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    async executePendingNotification(notificationId) {
        const notification = this.scheduledNotifications.find(n => n.id === notificationId);
        if (!notification || notification.status !== 'scheduled') return;

        try {
            await this.sendNotification(notification.type, notification.bookingData);
            notification.status = 'sent';
            notification.sentAt = new Date().toISOString();
        } catch (error) {
            notification.status = 'failed';
            notification.error = error.message;
        }

        this.saveScheduledNotifications();
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ WhatsApp
    sendWhatsAppMessage(phone, message) {
        const cleanPhone = phone.replace(/\D/g, '');
        const whatsappUrl = `https://wa.me/${cleanPhone}?text=${encodeURIComponent(message)}`;
        
        // –û—Ç–∫—Ä—ã—Ç–∏–µ –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
        if (window.open(whatsappUrl, '_blank')) {
            this.showNotificationSentToast();
        }
    }

    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ
    showNotificationSentToast() {
        const toast = document.createElement('div');
        toast.className = 'notification-toast';
        toast.innerHTML = `
            <i class="fab fa-whatsapp"></i>
            <span>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ WhatsApp</span>
        `;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.classList.add('show');
        }, 100);
        
        setTimeout(() => {
            toast.classList.remove('show');
            setTimeout(() => toast.remove(), 300);
        }, 3000);
    }

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    logNotification(type, phone, message) {
        const log = {
            timestamp: new Date().toISOString(),
            type,
            phone,
            messageLength: message.length,
            status: 'sent'
        };

        const logs = JSON.parse(localStorage.getItem('notificationLogs') || '[]');
        logs.push(log);
        
        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ª–æ–≥–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000 –∑–∞–ø–∏—Å–µ–π)
        if (logs.length > 1000) {
            logs.splice(0, logs.length - 1000);
        }

        localStorage.setItem('notificationLogs', JSON.stringify(logs));
    }

    // –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
    async sendMassNotification(templateKey, clientFilter = {}, customData = {}) {
        const clients = this.getFilteredClients(clientFilter);
        const results = [];
        
        for (const client of clients) {
            try {
                const data = {
                    clientName: client.name,
                    clientPhone: client.phone,
                    ...customData
                };
                
                const message = this.createMessage(templateKey, data);
                this.sendWhatsAppMessage(client.phone, message);
                
                results.push({
                    client: client.name,
                    phone: client.phone,
                    success: true
                });
                
                // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
                await this.delay(2000);
            } catch (error) {
                results.push({
                    client: client.name,
                    phone: client.phone,
                    success: false,
                    error: error.message
                });
            }
        }
        
        return results;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    getFilteredClients(filter) {
        const bookings = JSON.parse(localStorage.getItem('massageBookings') || '[]');
        const uniqueClients = new Map();
        
        bookings.forEach(booking => {
            const key = booking.client.phone;
            if (!uniqueClients.has(key)) {
                uniqueClients.set(key, {
                    name: booking.client.name,
                    phone: booking.client.phone,
                    lastVisit: booking.date,
                    totalVisits: 1
                });
            } else {
                const client = uniqueClients.get(key);
                client.totalVisits++;
                if (booking.date > client.lastVisit) {
                    client.lastVisit = booking.date;
                }
            }
        });
        
        let clients = Array.from(uniqueClients.values());
        
        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (filter.minVisits) {
            clients = clients.filter(c => c.totalVisits >= filter.minVisits);
        }
        
        if (filter.lastVisitDays) {
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - filter.lastVisitDays);
            clients = clients.filter(c => new Date(c.lastVisit) >= cutoffDate);
        }
        
        return clients;
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    getSeason(date) {
        const month = date.getMonth();
        if (month >= 2 && month <= 4) return '–≤–µ—Å–Ω–∞';
        if (month >= 5 && month <= 7) return '–ª–µ—Ç–æ';
        if (month >= 8 && month <= 10) return '–æ—Å–µ–Ω—å';
        return '–∑–∏–º–∞';
    }

    getRecommendedInterval(serviceName) {
        const intervals = {
            '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∞–∂': '2-3 –Ω–µ–¥–µ–ª–∏',
            '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∞–∂': '1-2 –Ω–µ–¥–µ–ª–∏',
            '–†–µ–ª–∞–∫—Å –º–∞—Å—Å–∞–∂': '3-4 –Ω–µ–¥–µ–ª–∏',
            '–ì–ª—É–±–æ–∫–∏–π –º–∞—Å—Å–∞–∂': '2-3 –Ω–µ–¥–µ–ª–∏'
        };
        return intervals[serviceName] || '2-3 –Ω–µ–¥–µ–ª–∏';
    }

    getPreparationTips(serviceName) {
        const tips = {
            '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∞–∂': '–ù–µ –µ—à—å—Ç–µ –∑–∞ 2 —á–∞—Å–∞ –¥–æ —Å–µ–∞–Ω—Å–∞. –ü—Ä–∏–º–∏—Ç–µ –¥—É—à –ø–µ—Ä–µ–¥ –ø—Ä–æ—Ü–µ–¥—É—Ä–æ–π.',
            '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∞–∂': '–í–æ–∑—å–º–∏—Ç–µ —Å —Å–æ–±–æ–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—É—é —Ñ–æ—Ä–º—É. –ù–µ —Ç—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å –∑–∞ 4 —á–∞—Å–∞ –¥–æ –º–∞—Å—Å–∞–∂–∞.',
            '–†–µ–ª–∞–∫—Å –º–∞—Å—Å–∞–∂': '–û—Ç–∫–ª—é—á–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–∞ –≤—Ä–µ–º—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ—Å—å –Ω–∞ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ.',
            '–ì–ª—É–±–æ–∫–∏–π –º–∞—Å—Å–∞–∂': '–ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã –∑–∞ –¥–µ–Ω—å –¥–æ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã. –ü–æ—Å–ª–µ –º–∞—Å—Å–∞–∂–∞ –æ—Ç–¥–æ—Ö–Ω–∏—Ç–µ 30 –º–∏–Ω—É—Ç.'
        };
        return tips[serviceName] || '';
    }

    generateNotificationId() {
        return 'notif_' + Date.now() + '_' + Math.random().toString(36).substr(2, 5);
    }

    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    saveScheduledNotifications() {
        localStorage.setItem('scheduledNotifications', JSON.stringify(this.scheduledNotifications));
    }

    saveTemplates() {
        localStorage.setItem('notificationTemplates', JSON.stringify(this.templates));
    }

    saveClientPreferences() {
        localStorage.setItem('clientPreferences', JSON.stringify(this.clientPreferences));
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏
    updateTemplate(templateKey, newTemplate) {
        this.templates[templateKey] = newTemplate;
        this.saveTemplates();
    }

    getTemplate(templateKey) {
        return this.templates[templateKey];
    }

    getAllTemplates() {
        return this.templates;
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
    setClientPreference(phone, preferences) {
        this.clientPreferences[phone] = preferences;
        this.saveClientPreferences();
    }

    getClientPreference(phone) {
        return this.clientPreferences[phone] || {
            notifications: true,
            language: 'ru',
            preferredTime: 'morning'
        };
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    addNotificationStyles() {
        if (document.getElementById('notification-styles')) return;

        const style = document.createElement('style');
        style.id = 'notification-styles';
        style.textContent = `
            .notification-toast {
                position: fixed;
                bottom: 20px;
                right: 20px;
                background: #25D366;
                color: white;
                padding: 1rem 1.5rem;
                border-radius: 50px;
                display: flex;
                align-items: center;
                gap: 0.8rem;
                font-weight: 600;
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
                transform: translateY(100px);
                opacity: 0;
                transition: all 0.3s ease;
                z-index: 10000;
            }

            .notification-toast.show {
                transform: translateY(0);
                opacity: 1;
            }

            .notification-toast i {
                font-size: 1.5rem;
            }

            @media (max-width: 768px) {
                .notification-toast {
                    bottom: 10px;
                    right: 10px;
                    left: 10px;
                    justify-content: center;
                }
            }
        `;
        document.head.appendChild(style);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∏–ª–µ–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    const notificationSystem = new NotificationSystem();
    notificationSystem.addNotificationStyles();
});

// –≠–∫—Å–ø–æ—Ä—Ç
window.NotificationSystem = NotificationSystem;

console.log('üí¨ Notification System Loaded Successfully!');